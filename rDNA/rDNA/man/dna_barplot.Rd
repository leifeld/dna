% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rDNA.R
\name{dna_barplot}
\alias{dna_barplot}
\alias{print.dna_barplot}
\alias{autoplot.dna_barplot}
\title{Generate the data necessary for creating a barplot for a variable}
\usage{
dna_barplot(
  statementType = "DNA Statement",
  variable = "concept",
  qualifier = "agreement",
  duplicates = "document",
  start.date = "01.01.1900",
  stop.date = "31.12.2099",
  start.time = "00:00:00",
  stop.time = "23:59:59",
  excludeValues = list(),
  excludeAuthors = character(),
  excludeSources = character(),
  excludeSections = character(),
  excludeTypes = character(),
  invertValues = FALSE,
  invertAuthors = FALSE,
  invertSources = FALSE,
  invertSections = FALSE,
  invertTypes = FALSE
)

\method{print}{dna_barplot}(x, trim = 30, attr = TRUE, ...)

\method{autoplot}{dna_barplot}(
  object,
  ...,
  lab.pos = "Agreement",
  lab.neg = "Disagreement",
  lab = TRUE,
  colors = FALSE,
  fontSize = 12,
  barWidth = 0.6,
  axisWidth = 1.5,
  truncate = 40,
  exclude.min = NULL
)
}
\arguments{
\item{statementType}{The name of the statement type in which the variable
of interest is nested. For example, \code{"DNA Statement"}.}

\item{variable}{The variable for which the barplot will be generated. There
will be one bar per entity label of this variable.}

\item{qualifier}{A boolean (binary) or integer variable to group the value
frequencies by. Can be \code{NULL} to skip the grouping.}

\item{duplicates}{Setting for excluding duplicate statements before network
construction. Valid settings are \code{"include"} (for including all
statements in network construction), \code{"document"} (for counting
only one identical statement per document), \code{"week"} (for counting
only one identical statement per calendar week), \code{"month"} (for
counting only one identical statement per calendar month), \code{"year"}
(for counting only one identical statement per calendar year), and
\code{"acrossrange"} (for counting only one identical statement across
the whole time range).}

\item{start.date}{The start date for network construction in the format
\code{"dd.mm.yyyy"}. All statements before this date will be excluded.}

\item{stop.date}{The stop date for network construction in the format
\code{"dd.mm.yyyy"}. All statements after this date will be excluded.}

\item{start.time}{The start time for network construction on the specified
\code{start.date}. All statements before this time on the specified date
will be excluded.}

\item{stop.time}{The stop time for network construction on the specified
\code{stop.date}. All statements after this time on the specified date
will be excluded.}

\item{excludeValues}{A list of named character vectors that contains entries
which should be excluded during network construction. For example,
\code{list(concept = c("A", "B"), organization = c("org A", "org B"))}
would exclude all statements containing concepts "A" or "B" or
organizations "org A" or "org B" when the network is constructed. This
is irrespective of whether these values appear in \code{variable1},
\code{variable2}, or the \code{qualifier}. Note that only variables at
the statement level can be used here. There are separate arguments for
excluding statements nested in documents with certain meta-data.}

\item{excludeAuthors}{A character vector of authors. If a statement is
nested in a document where one of these authors is set in the "Author"
meta-data field, the statement is excluded from network construction.}

\item{excludeSources}{A character vector of sources. If a statement is
nested in a document where one of these sources is set in the "Source"
meta-data field, the statement is excluded from network construction.}

\item{excludeSections}{A character vector of sections. If a statement is
nested in a document where one of these sections is set in the "Section"
meta-data field, the statement is excluded from network construction.}

\item{excludeTypes}{A character vector of types. If a statement is
nested in a document where one of these types is set in the "Type"
meta-data field, the statement is excluded from network construction.}

\item{invertValues}{A boolean value indicating whether the entries provided
by the \code{excludeValues} argument should be excluded from network
construction (\code{invertValues = FALSE}) or if they should be the only
values that should be included during network construction
(\code{invertValues = TRUE}).}

\item{invertAuthors}{A boolean value indicating whether the entries provided
by the \code{excludeAuthors} argument should be excluded from network
construction (\code{invertAuthors = FALSE}) or if they should be the
only values that should be included during network construction
(\code{invertAuthors = TRUE}).}

\item{invertSources}{A boolean value indicating whether the entries provided
by the \code{excludeSources} argument should be excluded from network
construction (\code{invertSources = FALSE}) or if they should be the
only values that should be included during network construction
(\code{invertSources = TRUE}).}

\item{invertSections}{A boolean value indicating whether the entries
provided by the \code{excludeSections} argument should be excluded from
network construction (\code{invertSections = FALSE}) or if they should
be the only values that should be included during network construction
(\code{invertSections = TRUE}).}

\item{invertTypes}{A boolean value indicating whether the entries provided
by the \code{excludeTypes} argument should be excluded from network
construction (\code{invertTypes = FALSE}) or if they should be the
only values that should be included during network construction
(\code{invertTypes = TRUE}).}

\item{x}{A \code{dna_barplot} object, as returned by the
\code{\link{dna_barplot}} function.}

\item{trim}{Number of maximum characters to display in entity labels.
Entities with more characters are truncated, and the last character is
replaced by an asterisk (\code{*}).}

\item{attr}{Display attributes, such as the name of the variable and the
levels of the qualifier variable if available.}

\item{...}{Additional arguments; currently not in use.}

\item{object}{A \code{dna_barplot} object.}

\item{lab.pos, lab.neg}{Names for (dis-)agreement labels.}

\item{lab}{Should (dis-)agreement labels and title be displayed?}

\item{colors}{If \code{TRUE}, the \code{Colors} column in the
\code{dna_barplot} object will be used to fill the bars. Also accepts
character objects matching one of the attribute variables of the
\code{dna_barplot} object.}

\item{fontSize}{Text size in pt.}

\item{barWidth}{Thickness of the bars. Bars will touch when set to \code{1}.
When set to \code{0.5}, space between two bars is the same as thickness of
bars.}

\item{axisWidth}{Thickness of the x-axis which separates agreement from
disagreement.}

\item{truncate}{Sets the number of characters to which axis labels should be
truncated.}

\item{exclude.min}{Reduces the plot to entities with a minimum frequency of
statements.}
}
\description{
Generate the data necessary for creating a barplot for a variable.

Show details of a \code{dna_barplot} object.

Plot a barplot generated from \code{\link{dna_barplot}}.
}
\details{
Create a \code{dna_barplot} object, which contains a data frame with
entity value frequencies grouped by the levels of a qualifier variable.
The qualifier variable is optional.

Print the data frame returned by the \code{\link{dna_barplot}} function.

This function plots \code{dna_barplot} objects generated by the
\code{\link{dna_barplot}} function. It plots agreement and disagreement with
DNA statements for different entities such as \code{"concept"},
\code{"organization"}, or \code{"person"}. Colors can be modified before
plotting (see examples).
}
\examples{
\dontrun{
dna_init()
dna_sample()
dna_openDatabase("sample.dna", coderId = 1, coderPassword = "sample")

# compute barplot data
b <- dna_barplot(statementType = "DNA Statement",
                 variable = "concept",
                 qualifier = "agreement")
b
}

\dontrun{
dna_init()
dna_sample()

dna_openDatabase("sample.dna", coderId = 1, coderPassword = "sample")

# compute barplot data
b <- dna_barplot(statementType = "DNA Statement",
                 variable = "concept",
                 qualifier = "agreement")

# plot barplot with ggplot2
library("ggplot2")
autoplot(b)

# use entity colours (here: colors of organizations as an illustration)
b <- dna_barplot(statementType = "DNA Statement",
                 variable = "organization",
                 qualifier = "agreement")
autoplot(b, colors = TRUE)

# edit the colors before plotting
b$Color[b$Type == "NGO"] <- "red"         # change NGO color to red
b$Color[b$Type == "Government"] <- "blue" # change government color to blue
autoplot(b, colors = TRUE)

# use an attribute, such as type, to color the bars
autoplot(b, colors = "Type") +
  scale_colour_manual(values = "black")

# replace colors for the three possible actor types with custom colors
autoplot(b, colors = "Type") +
  scale_fill_manual(values = c("red", "blue", "green")) +
  scale_colour_manual(values = "black")
}

}
\author{
Philip Leifeld

Johannes B. Gruber, Tim Henrichsen
}
